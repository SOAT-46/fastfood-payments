name: Golang Workflow

on:
  push:
    branches:
      - 'main'
    tags:
      - '*'
  pull_request:
    branches:
      - 'main'
  workflow_dispatch:

permissions:
  contents: 'write' # delivery-release

env:
  REPOSITORY_NAME: "fastfood-payments"

jobs:
  docker-build-and-push:
    name: 'docker > build and push'
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Validate Docker Hub repository
        id: validate-repo
        run: |
          NAMESPACE="${{ secrets.DOCKER_USERNAME }}"
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" "https://hub.docker.com/v2/repositories/${NAMESPACE}/${{ env.REPOSITORY_NAME }}/")

          if [ "$RESPONSE" -eq 200 ]; then
            echo "Repository ${NAMESPACE}/${{ env.REPOSITORY_NAME }} exists."
          elif [ "$RESPONSE" -eq 404 ]; then
            echo "Repository ${NAMESPACE}/${{ env.REPOSITORY_NAME }} does not exist."
            exit 1
          else
            echo "Failed to check repository existence. HTTP status code: ${RESPONSE}"
            exit 1
          fi

      - name: Set up Docker Buildx
        id: docker-buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        id: docker-push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ env.REPOSITORY_NAME }}:latest
            ${{ secrets.DOCKER_USERNAME }}/${{ env.REPOSITORY_NAME }}:${{ github.sha }}
